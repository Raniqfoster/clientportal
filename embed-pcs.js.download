(function() {
if (window.jQuery === undefined) {
	
    var script_tag = document.createElement('script');
    script_tag.setAttribute("type","text/javascript");
    script_tag.setAttribute("src", "https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js");
    
    if (script_tag.readyState) {   	
      script_tag.onreadystatechange = function () { // For old versions of IE
          if (this.readyState == 'complete' || this.readyState == 'loaded') {
        	  mainXposureEmbedScript(jQuery);
          }
      };
    } else {
      script_tag.onload = function(){mainXposureEmbedScript(jQuery)};
    }
    (document.getElementsByTagName("head")[0] || document.documentElement).appendChild(script_tag);
    
} else {
	if(!minVersion('1.9')){
		console.log('It appears you are using an older version of JQuery on your site. Xposure widgets require JQuery version 1.9 or newer.');
		return false;
	}
    mainXposureEmbedScript(jQuery);
}

//check for minimum required jquery version
function minVersion(version) {
	var $vrs = window.jQuery.fn.jquery.split('.'),
	min  = version.split('.'),
	prevs=[];
 
	for (var i=0, len=$vrs.length; i<len; i++) {
		
		//console.log(parseInt($vrs[i])+" "+parseInt(min[i])+" "+prevs[i-1]);
		if (min[i] && parseInt($vrs[i]) < parseInt(min[i])) {
			if (!prevs[i-1] || prevs[i-1] == 0)
				return false;
		} else {
			if ($vrs[i] > min[i])
				prevs[i] = 1;
			else
				prevs[i] = 0;
		}
	}
	return true;
}
})();
function mainXposureEmbedScript($) {
    $(document).ready(function() {
    	
    	var $el = $('#xp-pcs-launch');
    	
    	if(!$el.length){console.log('unable to find xp-pcs-launch element'); return false;}
    	
    	if($el.data('xp-script-loaded') || (typeof pcs != "undefined" && typeof pcs.init === "function")){ console.log("it appears the PCS script has already been loaded"); return false; }
    	
    	$el.data('xp-script-loaded', true);
    	
    	var agtId = $el.data('xp-agt-id');
        var ref = $el.data('xp-ref');
        var radius = $el.data('xp-radius');
        var lat = $el.data('xp-lat');
        var lng = $el.data('xp-lng');
        var size = $el.data('xp-size');
        var price = $el.data('xp-price');
        var beds = $el.data('xp-beds');
        var baths = $el.data('xp-baths');
        var type = $el.data('xp-type');
        
        var lotMode = false;
        
        if(agtId==undefined){console.log("agent id required"); return false;};
        
        if(ref==undefined){
        	ref=document.location.href;
        }
		
		var $css = $("<link>", {
            rel: "stylesheet",
            type: "text/css",
            href: "https://realtyhd.com/XposurePublicIncludes/style/pcs.css"
        }).appendTo('head');
		
		var $css = $("<link>", {
            rel: "stylesheet",
            type: "text/css",
            href: "https://realtyhd.com/XposurePublicIncludes/js/rangeslider/css/ion.rangeSlider.css"
        }).appendTo('head');
		
		var $css = $("<link>", {
            rel: "stylesheet",
            type: "text/css",
            href: "https://realtyhd.com/XposurePublicIncludes/js/rangeslider/css/ion.rangeSlider.skinHTML5.css"
        }).appendTo('head');
		
		$.getScript( "https://maps.google.com/maps/api/js?key=AIzaSyCpkiXqK6XyZpLTirFxiuycbpXNk1mtoTI&v=3.26&libraries=geometry" ).done(function(){
			$.getScript( "https://realtyhd.com/XposurePublicIncludes/js/pcs.js" ).done(getAndInitPCS);
		});
		$.getScript( "https://realtyhd.com/XposurePublicIncludes/js/rangeslider/js/ion.rangeSlider.min.js" );
		
        var params = {
        	referringUrl:ref
        };
        
        function getAndInitPCS(){
        	
        	$.ajax({
                url:       "https://realtyhd.com/iframe/pcssignup/"+agtId,
                data:      params,
                dataType:  "jsonp",
                jsonpCallback: "callback"
                	
             }).done(function(data) {
            	 
             	  $('body').append(data.html);
             	  
             	  addClasses($('#pcs-dialog-mask'));
             	  
             	  pcs.setSiteMode(true);
             	  if(beds==undefined){ beds=1 }
             	  pcs.setMinBeds(beds);
             	  if(baths==undefined){ baths=1 }
             	  pcs.setMinBaths(baths);
             	  if(size==undefined){ size=1000 }
             	  pcs.setSize(size);
             	  if(price==undefined){ price=300000 }
             	  pcs.setPrice(price);
             	  if(radius!=undefined){ pcs.setRadius(radius) }
             	  
             	  if(type == "condo"){
             		 $('#pcs-prop-type-select').val(3);
             		 document.getElementById("pcs-signup-form").xp_property_type.value=3;
             	  }
             	  
             	  if(lat==undefined || lng==undefined){
             		  lat = document.getElementById("pcs-signup-form").latitude.value;
             		  lng = document.getElementById("pcs-signup-form").longitude.value;
             	  }
             	  
             	  if(lat == "" || lng == "" || isNaN(lat) || isNaN(lng)){
             		 console.log('An error occured while setting up the PCS map. A valid lat/long for the center location was not provided.');
             		 return;
             	  }
             	  
             	  pcs.setLocation(lat, lng);
             	  //only checks for non-prefixed support
             	  pcs.setCssanimations($el[0].style.animationName !== undefined);
             	  pcs.init();
             	  document.getElementById("pcs-signup-form").url.value = ref;
             	  
             	 $('#pcs-prop-type-select').on("change", function(e){
         			
         			if (!lotMode && $(this).val() == "10") {
         				$('#bed-container').hide();
         				$('#bath-container').hide();
         				lotMode = true;
         				
         				pcs.setLotMode(true);
         			} else if (lotMode && $(this).val() != "10") {
         				$('#bed-container').show();
         				$('#bath-container').show();
         				lotMode = false;
         				
         				pcs.setLotMode(false);
         			}
         		});
             	  
             }).fail(function(data) {
             	  console.log('An error occured while getting the PCS HTML');
             });
        }
        
        $el.click(function(e){
        	e.preventDefault();
        	$(window).scrollTop(0);
        	pcs.showSetupDialog();
        });
    });
    //add classes to indicate css feature support.
    //only looks for modern (non-prefixed) support.
    //more thorough support can be achieved using modernizr
    function addClasses($div){
    	if( $div[0].style.backgroundSize !== undefined ) { $div.addClass('backgroundsize') } ;
    	if( $div[0].style.boxShadow !== undefined ) { $div.addClass('boxshadow') } ;
    }
};
